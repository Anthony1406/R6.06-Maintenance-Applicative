name: SonarQube Analysis

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main

jobs:
  sonar:
    name: SonarQube Scan
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Node.js (si ton projet est en Node.js par exemple)
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Cache Node modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: ${{ runner.os }}-node-

      - name: Install SonarScanner
        run: |
          wget https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-6.2.1.4610-linux-x64.zip
          unzip sonar-scanner-cli-6.2.1.4610-linux-x64.zip
          # Lister le contenu du répertoire extrait pour vérifier
          ls -R sonar-scanner-cli-6.2.1.4610-linux-x64/
          echo "/home/runner/sonar-scanner-cli-6.2.1.4610-linux-x64/bin" >> $GITHUB_PATH
          echo $GITHUB_PATH
          chmod +x /home/runner/sonar-scanner-cli-6.2.1.4610-linux-x64/bin/sonar-scanner
          

      - name: Test if sonar-scanner is in PATH
        run: |
          which sonar-scanner
          sonar-scanner --version

      - name: Run SonarQube Analysis
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}  # Utilise un token de SonarQube pour l'authentification
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL || 'https://sonarcloud.io' }}
        run: |
          sonar-scanner \
            -Dsonar.projectKey=SoyMono \
            -Dsonar.host.url=$SONAR_HOST_URL \
            -Dsonar.login=$SONAR_TOKEN
